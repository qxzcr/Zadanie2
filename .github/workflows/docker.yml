name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ghcr.io/qxzcr/weather-app
  CACHE_IMAGE: yourdockerhubusername/weather-app-cache

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to DockerHub  
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and cache Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
        outputs: type=docker,dest=/tmp/image.tar

    - name: Scan image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker-archive:/tmp/image.tar'
        format: 'table'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'

    - name: Push image (only if scan passed)
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
